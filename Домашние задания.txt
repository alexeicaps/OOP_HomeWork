/** Seminar 1
 *
 * Проанализировать персонажей "Крестьянин, Разбойник, Снайпер, Колдун, Копейщик, Арбалетчик, Монах".
 * Для каждого определит 8 полей данных(здоровье, сила итд) 3-4 поля поведения(методов атаковать, вылечить итд).
 * Создать абстрактный класс и иерархию наследников. Расположить классы в пакет так,
 * чтобы в основной программе не было видно их полей. В не абстрактных классах переопределить метод toString()
 * так, чтобы он возвращал название класса или имя. Создать в основной программе по одному объекту каждого
 * не абстрактного класса и вывести в консоль его имя.
 * */

/** Seminar 2
 * Добавить в проект класс, предназначенный для хранения координат.
 * Добавить в абстрактный класс поле, экземпляр класс координат.
 * Пробросить координаты через конструкторы наследников так,
 * чтобы создавая объекты вы передавали в параметрах имя и аоординаты.
 * Скорректировать алгоритм заполнения комманд. Кроме имён каждый персонаж должен иметь координаты.
 * Одна комманда находится с левой стороны другая с правой(у=0 и у=9).
 * В класс лучников добавить метод поиск ближайшего противника.
 * Алгоритм расчёта расстояний реализовать в классе координат.
 */

 /** Seminar 3
 * Добавить в файл интерфейса метод void step() это будет основной метод взаимодействия с объектами.
 * Добавить интерфейс в базовый абстрактный класс. Реализовать этот метод во всех классах наследниках.
 * Для начала просто заглушкой.
 * Доработать классы лучников. Лучник должен во первых проверить жив ли он и есть ли у него стрелы,
 * если нет то завершить метод. Если всё да, то найти ближайшего противника и выстрелить по нему и,
 * соответственно потратить одну стрелу. Реализовать весь функционал лучников в методе step().
 * Добавить в абстрактный класс int поле инициатива. В классах наследников инициализировать это поле.
 * Крестьянин = 0, маги=1, пехота=2, лучники=3. В мэйне сделать так, чтобы сначала делали ход персонажи
 * с наивысшей инициативой из обеих комманд а с наименьшей в конце.
 */